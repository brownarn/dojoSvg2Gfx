Index: utils.js
===================================================================
--- utils.js	(.../Vendor/dojo/1.9.1/dojox/gfx/utils.js)	(revision 2967)
+++ utils.js	(.../Karma/trunk/karma191/dojox/gfx/utils.js)	(revision 2967)
@@ -1,6 +1,6 @@
-define(["dojo/_base/kernel","dojo/_base/lang","./_base", "dojo/_base/html","dojo/_base/array", "dojo/_base/window", "dojo/_base/json", 
+define(["dojo/_base/kernel","dojo/_base/lang","dojo/_base/Color", "./_base", "dojo/_base/html","dojo/_base/array", "dojo/_base/window", "dojo/_base/json", 
 	"dojo/_base/Deferred", "dojo/_base/sniff", "require","dojo/_base/config"], 
-  function(kernel, lang, g, html, arr, win, jsonLib, Deferred, has, require, config){
+  function(kernel, lang, Color, g, html, arr, win, jsonLib, Deferred, has, require, config){ // karma: added dojo/_base/Color
 	var gu = g.utils = {};
 
 	lang.mixin(gu, {
@@ -37,7 +37,12 @@
 			if(isSurface || object instanceof g.Group){
 				t.children = arr.map(object.children, gu.serialize);
 				if(isSurface){
-					return t.children;	// Array
+					if (object.fills) {
+						t.fills = object.fills; // karma: fills used in svg.js
+						return t;
+					} else {
+						return t.children;	// Array
+					}			
 				}
 			}else{
 				t.shape = object.getShape();
@@ -47,8 +52,13 @@
 				if(v){ t.transform = v; }
 			}
 			if(object.getStroke){
-				v = object.getStroke();
-				if(v){ t.stroke = v; }
+				v = object.getStroke(); 
+				if (v && v.color instanceof Color) { // karma: Color object, rgba(r=0, g=...) {}, does not serialize properly 
+					v.color = v.color.toCss(true); 
+				} 
+				if(v){ 
+					t.stroke = v; 
+				}				
 			}
 			if(object.getFill){
 				v = object.getFill();
@@ -58,6 +68,12 @@
 				v = object.getFont();
 				if(v){ t.font = v; }
 			}
+			if (object.extraRawNodeAttrs) {
+				v = object.extraRawNodeAttrs;
+				if (v) {
+					t.extraRawNodeAttrs = v;
+				}
+			}
 			return t;	// Object
 		},
 
@@ -80,11 +96,24 @@
 			//		The destination container for the deserialized shapes.
 			// object: dojox/gfx/shape.Shape|Array
 			//		The shapes to deserialize.
+			var isSurface = parent instanceof g.Surface; // karma
+			if (isSurface && "fills" in object) { // karma
+				for(var key in object.fills){
+					var fill = object.fills[key];
+					parent.addFill(fill);
+				}
+			}
 
 			if(object instanceof Array){
 				return arr.map(object, lang.hitch(null, gu.deserialize, parent));	// Array
 			}
 			var shape = ("shape" in object) ? parent.createShape(object.shape) : parent.createGroup();
+			
+			if ("extraRawNodeAttrs" in object) {
+				for (var attr in object.extraRawNodeAttrs) {
+					shape.setRawNodeAttr(attr, object.extraRawNodeAttrs[attr]);
+				}
+			}
 			if("transform" in object){
 				shape.setTransform(object.transform);
 			}
@@ -151,7 +180,7 @@
 					try{
 						var sDim = surface.getDimensions();
 						var width = sDim.width;
-						var	height = sDim.height;
+						var height = sDim.height;
 
 						//Create an attach point in the iframe for the contents.
 						var node = gu._gfxSvgProxy.document.createElement("div");
